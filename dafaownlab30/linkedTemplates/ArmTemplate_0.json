{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dafaownlab30"
		},
		"ls_kevaownlab30_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kevaownlab30.vault.azure.net/"
		},
		"ls_source_devvertixddnsnet_BikeStores_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "devvertix.ddns.net,5722"
		},
		"ls_source_devvertixddnsnet_BikeStores_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "BikeStores"
		},
		"ls_source_devvertixddnsnet_BikeStores_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "integrator"
		},
		"ls_stacownlab30_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stacownlab30.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_kevaownlab30')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_kevaownlab30_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_devvertixddnsnet_BikeStores')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_source_devvertixddnsnet_BikeStores_properties_typeProperties_server')]",
					"database": "[parameters('ls_source_devvertixddnsnet_BikeStores_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_source_devvertixddnsnet_BikeStores_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_kevaownlab30",
							"type": "LinkedServiceReference"
						},
						"secretName": "secrdevvertixddnsnetbikestores"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kevaownlab30')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_stacownlab30_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_stacownlab30_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_kevaownlab30",
							"type": "LinkedServiceReference"
						},
						"secretName": "secrstacownlab30"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kevaownlab30')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bikestores_production_brands_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_devvertixddnsnet_BikeStores",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources/devvertixddnsnet"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "brand_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "brand_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "production",
					"table": "brands"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_devvertixddnsnet_BikeStores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bikestores_production_categories_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_devvertixddnsnet_BikeStores",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources/devvertixddnsnet"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "category_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "production",
					"table": "categories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_devvertixddnsnet_BikeStores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bikestores_production_products_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_devvertixddnsnet_BikeStores",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources/devvertixddnsnet"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "product_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "brand_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "model_year",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "list_price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "production",
					"table": "products"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_devvertixddnsnet_BikeStores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bikestores_sales_customers_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_devvertixddnsnet_BikeStores",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources/devvertixddnsnet"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "phone",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "street",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "zip_code",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "sales",
					"table": "customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_devvertixddnsnet_BikeStores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bikestores_sales_order_items_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_devvertixddnsnet_BikeStores",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources/devvertixddnsnet"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "item_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "product_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "list_price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "discount",
						"type": "decimal",
						"precision": 4,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "sales",
					"table": "order_items"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_devvertixddnsnet_BikeStores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bikestores_sales_orders_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_devvertixddnsnet_BikeStores",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources/devvertixddnsnet"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order_status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "order_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "required_date",
						"type": "date"
					},
					{
						"name": "shipped_date",
						"type": "date"
					},
					{
						"name": "store_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "staff_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "sales",
					"table": "orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_devvertixddnsnet_BikeStores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_production_brands_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stacownlab30_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datalake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('production_brands_',replace(substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 10), '-', ''),'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Bronze/devvertixddnsnet/bikestores/production/brands/', substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 4))",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stacownlab30_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_production_categories_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stacownlab30_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datalake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('production_categories_',replace(substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 10), '-', ''),'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Bronze/devvertixddnsnet/bikestores/production/categories/', substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 4))",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stacownlab30_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_production_products_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stacownlab30_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datalake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('production_products_',replace(substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 10), '-', ''),'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Bronze/devvertixddnsnet/bikestores/production/products/', substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 4))",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stacownlab30_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_sales_customers_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stacownlab30_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datalake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('sales_customers_',replace(substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 10), '-', ''),'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Bronze/devvertixddnsnet/bikestores/sales/customers/', substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 4))",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stacownlab30_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_sales_order_items_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stacownlab30_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datalake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('sales_order_items_',replace(substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 10), '-', ''),'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Bronze/devvertixddnsnet/bikestores/sales/order_items/', substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 4))",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stacownlab30_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_sales_orders_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stacownlab30_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datalake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('sales_orders_', replace(substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 10), '-', ''), '.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Bronze/devvertixddnsnet/bikestores/sales/orders/', substring(convertTimeZone(utcnow(), 'UTC', 'Central Standard Time'), 0, 4))",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stacownlab30_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_bikestore_production_brands')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IngestaDatos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "00:25:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "brand_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brand_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bikestores_production_brands_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_production_brands_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze/pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bikestores_production_brands_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_production_brands_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_bikestore_production_categories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IngestaDatos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "00:30:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "category_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bikestores_production_categories_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_production_categories_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze/pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bikestores_production_categories_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_production_categories_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_bikestore_production_products_daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IngestaDatos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "00:25:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "brand_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brand_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "model_year",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "model_year",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "list_price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "list_price",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bikestores_production_products_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_production_products_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze/pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bikestores_production_products_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_production_products_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_bikestore_sales_customers_daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IngestaDatos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "00:25:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "customer_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "customer_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "first_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "last_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "phone",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "street",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "street",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "zip_code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "zip_code",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bikestores_sales_customers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_sales_customers_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze/pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bikestores_sales_customers_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_sales_customers_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_bikestore_sales_order_items_daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IngestaDatos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \n\tA.order_id\n\t,A.item_id\n\t,A.product_id\n\t,A.quantity\n\t,A.list_price\n\t,A.discount\nFROM \n\tsales.order_items AS A \n\tINNER JOIN sales.orders AS B \n\t\tON A.order_id = B.order_id\nWHERE \n\tB.order_date >= CAST(CAST(GETDATE() AS DATE) AS DATETIME)\n\tAND B.order_date < CAST(CAST(DATEADD(DAY, 1, GETDATE()) AS DATE) AS DATETIME)",
								"queryTimeout": "00:30:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "order_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "order_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "quantity",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "quantity",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "list_price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "list_price",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "discount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 4
										},
										"sink": {
											"name": "discount",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bikestores_sales_order_items_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_sales_order_items_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Bronze/pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bikestores_sales_order_items_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_sales_order_items_parquet')]"
			]
		}
	]
}